// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipxe.proto

package iPXEBuilder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IPXE struct {
	Platform             string   `protobuf:"bytes,1,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Driver               string   `protobuf:"bytes,2,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Extension            string   `protobuf:"bytes,3,opt,name=Extension,proto3" json:"Extension,omitempty"`
	Script               string   `protobuf:"bytes,4,opt,name=Script,proto3" json:"Script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPXE) Reset()         { *m = IPXE{} }
func (m *IPXE) String() string { return proto.CompactTextString(m) }
func (*IPXE) ProtoMessage()    {}
func (*IPXE) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c3654a0f30563d, []int{0}
}

func (m *IPXE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPXE.Unmarshal(m, b)
}
func (m *IPXE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPXE.Marshal(b, m, deterministic)
}
func (m *IPXE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPXE.Merge(m, src)
}
func (m *IPXE) XXX_Size() int {
	return xxx_messageInfo_IPXE.Size(m)
}
func (m *IPXE) XXX_DiscardUnknown() {
	xxx_messageInfo_IPXE.DiscardUnknown(m)
}

var xxx_messageInfo_IPXE proto.InternalMessageInfo

func (m *IPXE) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *IPXE) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *IPXE) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *IPXE) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

type IPXEStatus struct {
	Done                 bool     `protobuf:"varint,1,opt,name=Done,proto3" json:"Done,omitempty"`
	TotalSteps           int64    `protobuf:"varint,2,opt,name=TotalSteps,proto3" json:"TotalSteps,omitempty"`
	CurrentStep          int64    `protobuf:"varint,3,opt,name=CurrentStep,proto3" json:"CurrentStep,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPXEStatus) Reset()         { *m = IPXEStatus{} }
func (m *IPXEStatus) String() string { return proto.CompactTextString(m) }
func (*IPXEStatus) ProtoMessage()    {}
func (*IPXEStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c3654a0f30563d, []int{1}
}

func (m *IPXEStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPXEStatus.Unmarshal(m, b)
}
func (m *IPXEStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPXEStatus.Marshal(b, m, deterministic)
}
func (m *IPXEStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPXEStatus.Merge(m, src)
}
func (m *IPXEStatus) XXX_Size() int {
	return xxx_messageInfo_IPXEStatus.Size(m)
}
func (m *IPXEStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IPXEStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IPXEStatus proto.InternalMessageInfo

func (m *IPXEStatus) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func (m *IPXEStatus) GetTotalSteps() int64 {
	if m != nil {
		return m.TotalSteps
	}
	return 0
}

func (m *IPXEStatus) GetCurrentStep() int64 {
	if m != nil {
		return m.CurrentStep
	}
	return 0
}

func (m *IPXEStatus) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*IPXE)(nil), "iPXEBuilder.IPXE")
	proto.RegisterType((*IPXEStatus)(nil), "iPXEBuilder.IPXEStatus")
}

func init() { proto.RegisterFile("ipxe.proto", fileDescriptor_74c3654a0f30563d) }

var fileDescriptor_74c3654a0f30563d = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x46, 0x8d, 0x09, 0xa1, 0x9d, 0x9c, 0x9c, 0x83, 0x86, 0x22, 0x52, 0x72, 0xf2, 0x14, 0x44,
	0x2f, 0x9e, 0x6d, 0x83, 0xf4, 0x16, 0x12, 0x0f, 0xbd, 0xae, 0x3a, 0xe2, 0x42, 0xcc, 0x2e, 0x93,
	0x49, 0xe9, 0xcf, 0x97, 0x9d, 0x14, 0x1b, 0xf0, 0x36, 0xdf, 0x9b, 0x9d, 0x7d, 0xbb, 0x03, 0x60,
	0xfd, 0x91, 0x4a, 0xcf, 0x4e, 0x1c, 0x66, 0xb6, 0xde, 0x57, 0x2f, 0xa3, 0xed, 0x3e, 0x89, 0x0b,
	0x0f, 0xc9, 0xae, 0xde, 0x57, 0xb8, 0x82, 0x45, 0xdd, 0x19, 0xf9, 0x72, 0xfc, 0x93, 0x47, 0xeb,
	0xe8, 0x7e, 0xd9, 0xfc, 0x65, 0xbc, 0x86, 0x74, 0xcb, 0xf6, 0x40, 0x9c, 0x5f, 0x6a, 0xe7, 0x94,
	0xf0, 0x16, 0x96, 0xd5, 0x51, 0xa8, 0x1f, 0xac, 0xeb, 0xf3, 0x58, 0x5b, 0x67, 0x10, 0xa6, 0xda,
	0x0f, 0xb6, 0x5e, 0xf2, 0x64, 0x9a, 0x9a, 0x52, 0x71, 0x00, 0x08, 0xc6, 0x56, 0x8c, 0x8c, 0x03,
	0x22, 0x24, 0x5b, 0xd7, 0x93, 0x3a, 0x17, 0x8d, 0xd6, 0x78, 0x07, 0xf0, 0xe6, 0xc4, 0x74, 0xad,
	0x90, 0x1f, 0xd4, 0x19, 0x37, 0x33, 0x82, 0x6b, 0xc8, 0x36, 0x23, 0x33, 0xf5, 0x12, 0xb2, 0x9a,
	0xe3, 0x66, 0x8e, 0xc2, 0xad, 0xb5, 0x91, 0xef, 0x93, 0x59, 0xeb, 0xc7, 0x57, 0xc8, 0x76, 0xe7,
	0x8f, 0xe3, 0x33, 0xa4, 0x1b, 0x26, 0x23, 0x84, 0x57, 0xe5, 0x6c, 0x21, 0x65, 0x38, 0xb3, 0xba,
	0xf9, 0x87, 0xa6, 0xe7, 0x16, 0x17, 0x0f, 0xd1, 0x7b, 0xaa, 0x6b, 0x7c, 0xfa, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xd2, 0x2f, 0x2e, 0x76, 0x54, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IPXEBuilderClient is the client API for IPXEBuilder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPXEBuilderClient interface {
	Create(ctx context.Context, in *IPXE, opts ...grpc.CallOption) (IPXEBuilder_CreateClient, error)
}

type iPXEBuilderClient struct {
	cc grpc.ClientConnInterface
}

func NewIPXEBuilderClient(cc grpc.ClientConnInterface) IPXEBuilderClient {
	return &iPXEBuilderClient{cc}
}

func (c *iPXEBuilderClient) Create(ctx context.Context, in *IPXE, opts ...grpc.CallOption) (IPXEBuilder_CreateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_IPXEBuilder_serviceDesc.Streams[0], "/iPXEBuilder.IPXEBuilder/Create", opts...)
	if err != nil {
		return nil, err
	}
	x := &iPXEBuilderCreateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type IPXEBuilder_CreateClient interface {
	Recv() (*IPXEStatus, error)
	grpc.ClientStream
}

type iPXEBuilderCreateClient struct {
	grpc.ClientStream
}

func (x *iPXEBuilderCreateClient) Recv() (*IPXEStatus, error) {
	m := new(IPXEStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// IPXEBuilderServer is the server API for IPXEBuilder service.
type IPXEBuilderServer interface {
	Create(*IPXE, IPXEBuilder_CreateServer) error
}

// UnimplementedIPXEBuilderServer can be embedded to have forward compatible implementations.
type UnimplementedIPXEBuilderServer struct {
}

func (*UnimplementedIPXEBuilderServer) Create(req *IPXE, srv IPXEBuilder_CreateServer) error {
	return status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterIPXEBuilderServer(s *grpc.Server, srv IPXEBuilderServer) {
	s.RegisterService(&_IPXEBuilder_serviceDesc, srv)
}

func _IPXEBuilder_Create_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPXE)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(IPXEBuilderServer).Create(m, &iPXEBuilderCreateServer{stream})
}

type IPXEBuilder_CreateServer interface {
	Send(*IPXEStatus) error
	grpc.ServerStream
}

type iPXEBuilderCreateServer struct {
	grpc.ServerStream
}

func (x *iPXEBuilderCreateServer) Send(m *IPXEStatus) error {
	return x.ServerStream.SendMsg(m)
}

var _IPXEBuilder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iPXEBuilder.IPXEBuilder",
	HandlerType: (*IPXEBuilderServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Create",
			Handler:       _IPXEBuilder_Create_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "ipxe.proto",
}

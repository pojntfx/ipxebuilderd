// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipxe.proto

package iPXEBuilder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IPXE struct {
	Platform             string   `protobuf:"bytes,1,opt,name=Platform,proto3" json:"Platform,omitempty"`
	Driver               string   `protobuf:"bytes,2,opt,name=Driver,proto3" json:"Driver,omitempty"`
	Extension            string   `protobuf:"bytes,3,opt,name=Extension,proto3" json:"Extension,omitempty"`
	Script               string   `protobuf:"bytes,4,opt,name=Script,proto3" json:"Script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPXE) Reset()         { *m = IPXE{} }
func (m *IPXE) String() string { return proto.CompactTextString(m) }
func (*IPXE) ProtoMessage()    {}
func (*IPXE) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c3654a0f30563d, []int{0}
}

func (m *IPXE) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPXE.Unmarshal(m, b)
}
func (m *IPXE) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPXE.Marshal(b, m, deterministic)
}
func (m *IPXE) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPXE.Merge(m, src)
}
func (m *IPXE) XXX_Size() int {
	return xxx_messageInfo_IPXE.Size(m)
}
func (m *IPXE) XXX_DiscardUnknown() {
	xxx_messageInfo_IPXE.DiscardUnknown(m)
}

var xxx_messageInfo_IPXE proto.InternalMessageInfo

func (m *IPXE) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *IPXE) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *IPXE) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *IPXE) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

type IPXEPath struct {
	Path                 string   `protobuf:"bytes,1,opt,name=Path,proto3" json:"Path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPXEPath) Reset()         { *m = IPXEPath{} }
func (m *IPXEPath) String() string { return proto.CompactTextString(m) }
func (*IPXEPath) ProtoMessage()    {}
func (*IPXEPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_74c3654a0f30563d, []int{1}
}

func (m *IPXEPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPXEPath.Unmarshal(m, b)
}
func (m *IPXEPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPXEPath.Marshal(b, m, deterministic)
}
func (m *IPXEPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPXEPath.Merge(m, src)
}
func (m *IPXEPath) XXX_Size() int {
	return xxx_messageInfo_IPXEPath.Size(m)
}
func (m *IPXEPath) XXX_DiscardUnknown() {
	xxx_messageInfo_IPXEPath.DiscardUnknown(m)
}

var xxx_messageInfo_IPXEPath proto.InternalMessageInfo

func (m *IPXEPath) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*IPXE)(nil), "iPXEBuilder.IPXE")
	proto.RegisterType((*IPXEPath)(nil), "iPXEBuilder.IPXEPath")
}

func init() { proto.RegisterFile("ipxe.proto", fileDescriptor_74c3654a0f30563d) }

var fileDescriptor_74c3654a0f30563d = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0x2c, 0xa8, 0x48,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xce, 0x0c, 0x88, 0x70, 0x75, 0x2a, 0xcd, 0xcc,
	0x49, 0x49, 0x2d, 0x52, 0x2a, 0xe0, 0x62, 0xf1, 0x0c, 0x88, 0x70, 0x15, 0x92, 0xe2, 0xe2, 0x08,
	0xc8, 0x49, 0x2c, 0x49, 0xcb, 0x2f, 0xca, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3,
	0x85, 0xc4, 0xb8, 0xd8, 0x5c, 0x8a, 0x32, 0xcb, 0x52, 0x8b, 0x24, 0x98, 0xc0, 0x32, 0x50, 0x9e,
	0x90, 0x0c, 0x17, 0xa7, 0x6b, 0x45, 0x49, 0x6a, 0x5e, 0x71, 0x66, 0x7e, 0x9e, 0x04, 0x33, 0x58,
	0x0a, 0x21, 0x00, 0xd2, 0x15, 0x9c, 0x5c, 0x94, 0x59, 0x50, 0x22, 0xc1, 0x02, 0xd1, 0x05, 0xe1,
	0x29, 0xc9, 0x71, 0x71, 0x80, 0x6c, 0x0c, 0x48, 0x2c, 0xc9, 0x10, 0x12, 0xe2, 0x62, 0x01, 0xd1,
	0x50, 0x1b, 0xc1, 0x6c, 0x23, 0x67, 0x2e, 0x6e, 0x4f, 0x84, 0x03, 0x85, 0x4c, 0xb8, 0xd8, 0x9c,
	0x8b, 0x52, 0x13, 0x4b, 0x52, 0x85, 0x04, 0xf5, 0x90, 0x1c, 0xae, 0x07, 0x52, 0x23, 0x25, 0x8a,
	0x21, 0x04, 0x32, 0x42, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x55, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x15, 0xf5, 0x05, 0x64, 0xf8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IPXEBuilderClient is the client API for IPXEBuilder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPXEBuilderClient interface {
	Create(ctx context.Context, in *IPXE, opts ...grpc.CallOption) (*IPXEPath, error)
}

type iPXEBuilderClient struct {
	cc grpc.ClientConnInterface
}

func NewIPXEBuilderClient(cc grpc.ClientConnInterface) IPXEBuilderClient {
	return &iPXEBuilderClient{cc}
}

func (c *iPXEBuilderClient) Create(ctx context.Context, in *IPXE, opts ...grpc.CallOption) (*IPXEPath, error) {
	out := new(IPXEPath)
	err := c.cc.Invoke(ctx, "/iPXEBuilder.IPXEBuilder/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IPXEBuilderServer is the server API for IPXEBuilder service.
type IPXEBuilderServer interface {
	Create(context.Context, *IPXE) (*IPXEPath, error)
}

// UnimplementedIPXEBuilderServer can be embedded to have forward compatible implementations.
type UnimplementedIPXEBuilderServer struct {
}

func (*UnimplementedIPXEBuilderServer) Create(ctx context.Context, req *IPXE) (*IPXEPath, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterIPXEBuilderServer(s *grpc.Server, srv IPXEBuilderServer) {
	s.RegisterService(&_IPXEBuilder_serviceDesc, srv)
}

func _IPXEBuilder_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IPXE)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPXEBuilderServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iPXEBuilder.IPXEBuilder/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPXEBuilderServer).Create(ctx, req.(*IPXE))
	}
	return interceptor(ctx, in, info, handler)
}

var _IPXEBuilder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iPXEBuilder.IPXEBuilder",
	HandlerType: (*IPXEBuilderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IPXEBuilder_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ipxe.proto",
}
